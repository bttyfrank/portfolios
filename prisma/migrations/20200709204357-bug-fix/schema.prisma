generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url = "***"
// }

datasource db {
  provider = "postgres"
  url = "***"
}

model User {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  username  String   @unique
  fullName  String
  email     String   @unique
  password  String
  todos     Todo[]
  resume    Resume?
}

model Todo {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  content   String
  detail    String?
  completed Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Resume {
  id        Int       @default(autoincrement()) @id
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  profile   Profile
  schools   School[]
  job       Job[]
  skills    Skill[]
  projects  Project[]
  awards    Award[]
  headings  Heading[]
}

model Heading {
  id       Int    @default(autoincrement()) @id
  resume   Resume @relation(fields: [resumeId], references: [id])
  resumeId Int
  name     String
  section  String
}

model Profile {
  id       Int    @default(autoincrement()) @id
  resume   Resume @relation(fields: [resumeId], references: [id])
  resumeId Int
  fullName String
  email    String
  phone    String
  location String
  link     String
}

model School {
  id        Int      @default(autoincrement()) @id
  resume    Resume   @relation(fields: [resumeId], references: [id])
  resumeId  Int
  name      String
  location  String
  degree    String
  major     String
  gpa       Float
  startDate DateTime
  endDate   DateTime
}

model Job {
  id               Int      @default(autoincrement()) @id
  resume           Resume   @relation(fields: [resumeId], references: [id])
  resumeId         Int
  companyName      String
  title            String
  location         String
  startDate        DateTime
  endDate          DateTime
  responsibilities String[]
}

model Skill {
  id       Int      @default(autoincrement()) @id
  resume   Resume   @relation(fields: [resumeId], references: [id])
  resumeId Int
  name     String
  details  String[]
}

model Project {
  id       Int      @default(autoincrement()) @id
  resume   Resume   @relation(fields: [resumeId], references: [id])
  resumeId Int
  name     String
  desc     String
  link     String
  tools    String[]
}

model Award {
  id       Int      @default(autoincrement()) @id
  resume   Resume   @relation(fields: [resumeId], references: [id])
  resumeId Int
  name     String
  date     DateTime
  awarder  String
  summary  String[]
}